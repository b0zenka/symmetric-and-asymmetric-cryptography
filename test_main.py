from fastapi.testclient import TestClient

from main import app

client = TestClient(app)

def test_generate_symetric_key():
    response = client.get("/symetric/key")
    assert response.status_code == 200

def test_symetric_key_empty_key():
    response = client.post("/symetric/key", json={"key": ""})
    assert response.status_code == 400
    assert response.json() == {"detail": "Given key is empty."}

def test_symetric_key_is_not_in_hex_form():
    response = client.post("/symetric/key", json={"key": "alamakota"})
    assert response.status_code == 400
    assert response.json() == {"detail": "Given key is not in hex form."}
    
def test_symetric_key_given_key_is_correct():
    response = client.post("/symetric/key", json={"key": "7a37735f78504f78496a443341775630766e4c6736705f375674316f4a616f3744734449635a702d684a4d3d"})
    assert response.status_code == 200
    assert response.json() == {"message": "Symmetric key set successfully."}
    
def test_symetric_encode_key_is_set():
    response = client.post("/symetric/encode", json={"text": "Ala ma kota"})
    assert response.status_code == 200

def test_symetric_decode_key_is_set():
    response = client.post("/symetric/decode", json={"text": "gAAAAABkLs1Ql5GBxCabYQ8YgcqxDTAWzXJT8UxML1cncxNA6qQ-hnZxbHcb-UbucWtmt75a5iH1wLzgzxEusJRazNXahIlDZg=="})
    assert response.status_code == 200
    assert response.json() == {"decrypted": "Ala ma kota"}

def test_asymetric_generate_key():
    response = client.get("/asymetric/key")
    assert response.status_code == 200
    
def test_asymetric_key_ssh():
    response = client.get("/asymetric/key/ssh")
    assert response.status_code == 200

def test_asymetric_key_not_correct_dict():
    response = client.post("/asymetric/key", json={"wrong_data": ""})
    assert response.status_code == 400
    
def test_asymetric_key_empty_keys():
    response = client.post("/asymetric/key", json={"private_key": "", "public_key": ""})
    assert response.status_code == 400

def test_asymetric_key_correct_pair_keys():
    response = client.post("/asymetric/key", json={
    "private_key": "2d2d2d2d2d424547494e205253412050524956415445204b45592d2d2d2d2d0a4d4949457041494241414b43415145417641557463634472483861664439767646516b72315330364b4141497767614a53562f4e56514c307656714a764650350a6c42774f6f354c6f64496b414266666878366c4b6e2f704c776e4e50642b663578725151516b726d5743376d496e6a55624b584563614e33304d7750495930760a317a37643856342b38476a372b3759414b3853636c4d4f75687037763354693478342f42444763364a78354f632b456a6b4250597341363435743452577231310a70576b536a6b52342b5148674270327339487954526e63476e6c63304d544b6e71324f5964643939763773746963356a34734a452b54454145374b6a4d6c4e330a2f61685759464a3956434349446f35724b676f4641376c67304c4a72614a59304d4132556276584650373767492f5636466f31457132724e5033664179624e540a315265504c3433386d384c3433765375626f594a525034724a33484453384653362f35434b77494441514142416f494241446946516530424e6d3039387844380a5a336d6d59535062546245366d5764694f614479434c4b326963586d55714e6e6877354d424f614e5167334f4a56436c2f4a7864757334756d746d67656c49730a545079376f6d7562516e5664323961664268534848472b6732574c4f42507073432b616a776d704e6a35514c717a7732735152335053374853453631747075450a3870386a4373426b77366d4178637131386b2f63643359745a7334586a564b43345171686b596466353276616a455056396746746633674c5a72456b635343340a5a4a6655396466684a514f705a4576365a624356724f30726b356b516677476763475a56566348494e7a675970664b333477684e7647763945443530456e486e0a312f306c2b686c5a5966553057524f35546d2f5049553036593545756e372b6c53597973446c307533656b4d6247666d6463645a704133334a7232346a5675560a667056716e466b43675945413743374a7576657365536868754257333262555944474d587654536f6d31586b4c532f5644585977722b554d62364330384c37720a62622f674832546a4f55654d3068692f415648797179555a32645658446f416376784d766353565757593857494c6174414b6663344e334d5258414a4656496d0a536d367a644e50364d4b4e4374683355726767472b6f77316f7a6a4f4559342b7136764c6f746f305172544375736c6d485868754a51384367594541793876620a5735664f74673054792b5771346550364e727a5477624141444338564d5469364f4b37557576486e6e51777776675144615a637459394c6e565446357a44304d0a6163766674355a64426365696339574e414a314f2b496165424f2f45766f61774d6d4e37585036354e6a72765548424c6e66304c2f6f6e4e6e55644a685951410a7571543034363358617a7151377375335a3852396161686e6f743249494a79656e76436b71535543675945417034785a6c385630475539495932736b7a64446d0a696f4d5271437666494c4e423937786a432f573466452b6c44747558414f4b7636562b68417952792f594f417074726652585235446d6833656b306151544d700a4d58504f79426d517447414a64704f68443049474d342b6c42653241784274504271615a73467467745868634c77336966734d374543712f4d6c64742b49354d0a6230536b5a5a6365552b5166384a704855736a49656f6b436759412f4e6e524c374d4b4a5a585547676136486370646838794162712b505834364c484b626c5a0a61364641653168454e6b76494a4b614b5567496150496a557641767a64647772314c6b48305050356e7671637731694249456f6d66467233585166427354566c0a3638575143744b594a352b6a6137474978377934727a572f3279544b37533773746333663855516f566e6f7546374a4431596178427a4e654b536a594e4c78650a774858536f514b4267514335677870486e327734594a7845637431692b564461613179387a7445572b633137426c4870624971777053666f6245356d753635660a7743503978566c484455716a3830494c6f436961673764536e474338476c4c55344a654551336d6f6b575778784a794d313666346258556d68483155494135690a4543396e76616e2b4675506f302b746f4b6946754335696b676c484f4c6a33656c31396a6f5558707a396b65617873466238647461673d3d0a2d2d2d2d2d454e44205253412050524956415445204b45592d2d2d2d2d0a",
    "public_key": "2d2d2d2d2d424547494e205055424c4943204b45592d2d2d2d2d0a4d494942496a414e42676b71686b6947397730424151454641414f43415138414d49494243674b43415145417641557463634472483861664439767646516b720a315330364b4141497767614a53562f4e56514c307656714a764650356c42774f6f354c6f64496b414266666878366c4b6e2f704c776e4e50642b6635787251510a516b726d5743376d496e6a55624b584563614e33304d775049593076317a37643856342b38476a372b3759414b3853636c4d4f75687037763354693478342f420a444763364a78354f632b456a6b42505973413634357434525772313170576b536a6b52342b5148674270327339487954526e63476e6c63304d544b6e71324f590a64643939763773746963356a34734a452b54454145374b6a4d6c4e332f61685759464a3956434349446f35724b676f4641376c67304c4a72614a59304d4132550a6276584650373767492f5636466f31457132724e5033664179624e54315265504c3433386d384c3433765375626f594a525034724a33484453384653362f35430a4b774944415141420a2d2d2d2d2d454e44205055424c4943204b45592d2d2d2d2d0a"
    })
    assert response.status_code == 200
    assert response.json() == {"message": "The public and private keys have been set."}

def test_asymetric_sign():
    response = client.post("/asymetric/sign", json={"text": "Ala ma kota"})
    assert response.status_code == 200
    assert response.json()['message'] == "416c61206d61206b6f7461"
    assert response.json()['signature']

def test_asymetric_verify_correct_json():
    response = client.post("/asymetric/verify", json={
        "message": "416c61206d61206b6f7461",
        "signature": "4d214525583f3deb4cccf0f492c80b31cd9a3f39e3551756b368518f7f923e09f2fcc0769c3863a5d2e6e70b47b0ea5edf0b1b2a50c724784c9a6c2760aeb26d4a7c0f34e1342fa57b0c703f8c64907b59f95fd1e7c53cda25ac4535b54bea9e0890da67ecd57b0afef89c4a0cfeba68ab08527b0b60ec9f19aaba58c102618f111b422464ef97d771a3a72e73b2ccd62dfe70ea185c4474c1e540ba906038f14a15dd2eb143bca8c39c4429c265b75858765180acdf70b56355d5704623c6358e6829ad604df8ce8a5c0a37864d41ea849733aceb2781409900210f7fa5f2e036b825190cc8b4bead38fa2775cff0f8e3f9b3c4e3537bd9c233d4b79a94ab77"
    })
    assert response.status_code == 200
    assert response.json() == {"result": "Signature is valid"}
    
def test_asymetric_verify_message_or_signature_empty():
    response = client.post("/asymetric/verify", json={
        "message": "",
        "signature": ""
    })
    assert response.status_code == 400
    assert response.json() == {"detail": "Both message and signature are required"}
    
def test_asymetric_encode():
    response = client.post("/asymetric/encode", json={"text": "Ala ma kota"})
    assert response.status_code == 200
    assert response.json()['encrypted_message']

def test_asymetric_decode():
    response = client.post("/asymetric/decode", json={
        "text": "0bdb57778a766df8af001156f2809abfeb77694cdf64f37a1c96caa3de19afda8c43cb2607c1deb3f28f33d777d1e34ee573b8dbc0355fa38b2ce643e195e6f8130c778134d03c32470420f11bd21035cbd81fdc226ea06f942040e64ff93908893454601349eb30d3eacbcb9974b83094819ccb160e165de0e7d58d84f5199de6a27ee992e883d007e203ef0742ab35a1b22a4752a372616b116853a614b13282671112a44131af878656b95f47b747f6442937044f1f55c05dd58d3be1fa2613d767a897e99cd5bb41ae35b752f80d0fd8869d8101d90e8686a18a380de1e115da0e377c14bdd32514efe107b44edd1f4e3dec6e57cad5d7988f03db71e443"
    })
    assert response.status_code == 200
    assert response.json()['decrypted_message'] == "Ala ma kota"